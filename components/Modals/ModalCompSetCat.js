import React, {useState} from 'react';import {Modal, Text, TouchableOpacity, View, TextInput, Picker} from 'react-native';import styles from '../../styles/components/ModalComp.component.style'import {useDispatch} from "react-redux";import {updateRecordSetCategory} from "../../redux/database/databaseAction";const ModalCompSetCat = ({modalVisible, setVisible, recordId, categories}) => {    const [currentCat, setCategory] = useState(null)    const dispatch = useDispatch()    const trySetCategory = () => {        dispatch(updateRecordSetCategory(            recordId,            currentCat ? categories.find(item => item.id === currentCat) : null)        )        setVisible(false)    }    return (        <Modal            animationType="slide"            transparent={false}            visible={modalVisible}        >            <View style={styles.modalContainer}>                <Text style={styles.titleText}>Chose category</Text>                <Picker                    selectedValue={currentCat}                    style={styles.pickerContainer}                    onValueChange={(item) => {                            setCategory(item)                        }                    }                >                    <Picker.Item label={"None"} value={""}/>                    {                        categories.map(item => {                            return <Picker.Item                                label={item.name}                                value={item.id}                                key={item.id.toString()}                            />                        })                    }                </Picker>                <View style={styles.buttonsContainer}>                    <TouchableOpacity                        style={[styles.buttonContainer, styles.cancelButton]}                        onPress={() => {setVisible(false)}}                    >                        <Text style={styles.cancelText}>Cancel</Text>                    </TouchableOpacity>                    <TouchableOpacity                        style={[styles.buttonContainer, styles.cancelButton]}                        onPress={() => {trySetCategory()}}                    >                        <Text style={styles.cancelText}>Set</Text>                    </TouchableOpacity>                </View>            </View>        </Modal>    );}export default ModalCompSetCat